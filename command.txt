python3 -m venv venv
(This command creates a virtual environment named venv using Python 3.)

source venv/bin/activate
(This command activates the virtual environment. Once activated, any Python packages installed will be isolated to this environment.)

deactivate
(This command deactivates the virtual environment, returning the shell to its normal state.)

python main.py --csv cdphe_open_data/target_citylist.csv --geojson cdphe_open_data/Colorado_City_Boundaries.geojson

### enter the shell on the running container
docker exec -it postgis /bin/bash

### connect to PostgreSQL using psql client
psql -h localhost -U postgres -d gis

### enable PostGIS
CREATE EXTENSION postgis;
SELECT postgis_version();

### docker-compose
docker-compose up --build

### build docker file and run it
docker build -t seed-image -f backend/Dockerfile.seed . && docker run -e POSTGRES_HOST=postgis -e POSTGRES_PORT=5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=gis seed-image

### run dev 
export FRONTEND_DOCKERFILE=frontend/Dockerfile.dev && export NODE_ENV=development && docker-compose up --build

### run dev with seed
export FRONTEND_DOCKERFILE=frontend/Dockerfile.dev && export NODE_ENV=development && export RUN_SEED=true && docker-compose up --build

### run prod 
export FRONTEND_DOCKERFILE=frontend/Dockerfile.prod && export NODE_ENV=production && docker-compose up --build
