services:
  postgis:
    image: kartoza/postgis:16-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
      - POSTGRES_DB=gis
    ports:
      - '5432:5432'
    volumes:
      - postgis-data:/var/lib/postgresql
      - ./postgis-init/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 10s
      retries: 10

  neo4j:
    image: neo4j:5.9.0
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_db_memory_pagecache_size=512M
      - NEO4J_db_memory_heap_initial__size=1G
      - NEO4J_db_memory_heap_max__size=2G
      - NEO4J_dbms_connector_bolt_listen__address=:7687
      - NEO4J_dbms_connector_http_listen__address=:7474
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - '7474:7474' # Neo4j browser UI
      - '7687:7687' # Bolt protocol for application access
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    healthcheck:
      test:
        [
          'CMD',
          'cypher-shell',
          '-a',
          'bolt://neo4j:7687',
          '-u',
          'neo4j',
          '-p',
          'testpassword',
          'RETURN 1',
        ]
      interval: 10s
      timeout: 10s
      retries: 10

  # seed-neo4j:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.seed-neo4j
  #   depends_on:
  #     neo4j:
  #       condition: service_healthy
  #   environment:
  #     - NEO4J_VERSION=5.9.0
  #     - NEO4J_AUTH=neo4j/testpassword
  #     - NEO4J_HOST=neo4j
  #     - NEO4J_PORT=7687
  #     - NEO4J_USERNAME=neo4j
  #     - NEO4J_PASSWORD=testpassword
  #   volumes:
  #     - ./data:/data
  #   command: python seed-neo4j.py

  # seed-postgis:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.seed-postgis
  #   depends_on:
  #     postgis:
  #       condition: service_healthy
  #   environment:
  #     - DB_USERNAME=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_HOST=postgis
  #     - DB_PORT=5432
  #     - DB_NAME=gis
  #   volumes:
  #     - ./data:/data
  #   command: /usr/local/bin/seed-postgis.sh

  app:
    build:
      context: .
      dockerfile: Dockerfile.api
    platform: linux/amd64
    ports:
      - 3000:3000
    command:
      - /bin/bash
      - -c
      - |
        exec uvicorn app.main:app --host 0.0.0.0 --port 3000 --reload --reload-dir /app
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      postgis:
        condition: service_healthy
      neo4j:
        condition: service_healthy

volumes:
  postgis-data:
    driver: local
  neo4j-data:
    driver: local
  neo4j-logs:
    driver: local
